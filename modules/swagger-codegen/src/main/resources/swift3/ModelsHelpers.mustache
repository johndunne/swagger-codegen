// ModelsHelper.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

{{#models}}{{#model}}
        // Decoder for [{{{classname}}}]
func SwaggerDataToObject( clazz: [{{{classname}}}], data: Data ) -> [{{classname}}]? {
        do {
            //let data = json_source.data(using: .utf8)
            let parsedData = try JSONSerialization.jsonObject(with: data, options: [])
            //let body = Decoders.decode( clazz: [QuizFinder].self, source: [source] as AnyObject)
            let body = Decoders.decode( clazz: [{{{classname}}}].self, source: parsedData as AnyObject)
            return body
        } catch let error as NSError {
            print(error)
            return nil
        }
}
func SwaggerDataToObject( clazz: {{{classname}}}, data: Data ) -> {{classname}}? {
        do {
            let parsedData = try JSONSerialization.jsonObject(with: data, options: [])
            let body = Decoders.decode( clazz: {{{classname}}}.self, source: parsedData as AnyObject)
            return body
        } catch let error as NSError {
            print(error)
            return nil
        }
}
func SwaggerObjectToData( clazz: [{{{classname}}}], object: [{{classname}}] ) -> Data? {
        do {
            let jsonData = try JSONSerialization.data(withJSONObject: object, options: .prettyPrinted)
            return jsonData
        } catch let error as NSError {
            print(error)
            return nil
        }
}
func SwaggerObjectToData( clazz: {{{classname}}}, object: {{classname}} ) -> Data? {
        do {
            let jsonData = try JSONSerialization.data(withJSONObject: object, options: .prettyPrinted)
            return jsonData
        } catch let error as NSError {
            print(error)
            return nil
        }
}
{{/model}}{{/models}}
