package api

/**
* Generated automatically from swagger-codegen. Don't edit here! There's no point :)
**/


import (
    "net/http"
    "fmt"
    "github.com/gorilla/mux"
    "github.com/urfave/negroni"
    "quickflickserver/controllers"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *negroni.Negroni {
    CreateModelsInDB()

	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}
    //n := negroni.New(NewRecovery(), NewLogger(), NewStatic(http.Dir("public")))

    n := negroni.New()
    //n.Use(negroni.Recovery)
    //n.Use(negroni.Logger)
    //n.Use(negroni.Static)
    n.UseHandler(router)

    return n
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

//func MyMiddleware(rw http.ResponseWriter, r *http.Request, next http.HandlerFunc) {
//    // do some stuff before
//    next(rw, r)
//    // do some stuff after
//}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"{{basePathWithoutHost}}/",
		Index,
	},
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
	Route{
		"{{operationId}}",
		"{{httpMethod}}",
		"{{basePathWithoutHost}}{{path}}",
		controllers.{{operationId}},
	},
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
}